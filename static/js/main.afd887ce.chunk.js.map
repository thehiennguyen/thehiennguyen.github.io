{"version":3,"sources":["features/comments/CommentAddForm.module.css","features/comments/CommentItem.module.css","features/comments/CommentList.module.css","features/authors/AuthorDashboard.tsx","app/api/agent.ts","features/comments/commentReducer.ts","features/books/dashboard/BookItem.tsx","features/books/dashboard/BestSellers.tsx","features/books/dashboard/NewBooks.tsx","features/books/dashboard/BookDashboard.tsx","features/contact/ContactInfo.tsx","features/users/LoginForm.tsx","features/comments/commentAgent.ts","features/comments/CommentAddForm.tsx","features/comments/CommentPlaceHolder.tsx","features/comments/user.png","features/comments/CommentItem.tsx","features/comments/CommentList.tsx","features/comments/CommentControl.tsx","features/comments/ControlBoard.tsx","features/comments/CommentPage.tsx","components/InputSearch/InputSearch.tsx","app/layout/NavBar.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AuthorDashboard","axios","defaults","baseURL","sleep","delay","Promise","resolve","setTimeout","interceptors","response","use","a","error","console","log","CommentActionType","responseBody","data","requests","get","url","then","getWithParams","params","post","body","put","delete","Books","getBestSellers","searchProductByName","searchString","query","QueryString","stringify","agent","BookItem","item","Grid","Column","Card","className","Image","src","image","ui","Content","Header","name","Meta","author","Description","shortDescription","extra","Label","color","as","style","float","price","BestSellers","useState","bestSellers","setBestSellers","useEffect","length","result","books","dividing","Icon","columns","Row","map","book","id","NewBooks","Item","Group","size","Extra","BookDashboard","Container","width","ContactInfo","LoginForm","textAlign","height","marginTop","verticalAlign","maxWidth","Form","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","type","Button","Message","href","urls","commentAgent","seedComments","deleteSeedComments","getProductOfSeedComments","getCommentOfProduct","productId","page","createCommenfOfProduct","content","userName","deleteCommentOfProduct","updateComment","commentId","deleteComment","initialState","comments","pageSize","totalPage","isLoading","errorHappended","initialProps","username","initialContext","state","dispatch","actionCreator","SetIsLoading","payload","SetPage","SetCommentResponse","isError","SetErrorHappended","reducer","action","Error","CommentContext","React","createContext","PropsContext","useCommentReducer","useReducer","CommentAddForm","commentControlContext","useContext","propsContext","validationSchema","Yup","comment","transform","value","originalvalue","trim","min","max","addComment","items","initialValues","onSubmit","values","setSubmitting","formik","errorBorderClass","touched","errors","styles","disabled","component","primary","loading","CommentPlaceHolder","props","Array","from","x","index","Placeholder","Line","CommentItem","onSaveClick","onDeleteClick","onEditClick","onCancelClick","isEdit","currentUserName","Comment","ViewCommentItem","modifiedDate","canModified","modifiedControls","Actions","Action","active","onClick","e","obj","Avatar","userAvatar","Author","Metadata","formatDistanceToNow","Date","Text","EditCommentItem","internalContent","setInternalContent","TextArea","onChange","handleClick","f","CommentList","editCommentId","setEditCommentId","handleEditClick","handleCancelClick","handleDeleteClick","getCommentsOfProduct","handleSaveClick","useCallback","setIsLoading","commentItems","onPageChange","CommentEmpty","info","CommentPagination","Pagination","activePage","totalPages","CommentControl","negative","Provider","ControlBoard","onChangeProductId","productIds","setProductIds","mapToDropdownSource","getProductIdOfSeedComments","clearSeedComments","Dropdown","inline","options","event","onKeyPress","handleKeyPress","charCode","preventDefault","nums","key","text","CommentPage","setProductId","InputSearch","setValue","setLoading","bookList","setBookList","typingTimeout","useRef","clearTimeout","current","Search","onResultSelect","title","onSearchChange","input","target","suggestList","description","searchBook","results","NavBar","Menu","pointing","secondary","header","NavLink","to","position","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afd887ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-add\":\"CommentAddForm_btn-add__IU1aB\",\"clear-float\":\"CommentAddForm_clear-float__3nVmC\",\"error\":\"CommentAddForm_error__1aCvG\",\"error-border\":\"CommentAddForm_error-border__1GPL4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"highlight\":\"CommentItem_highlight__1t4UM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination-container\":\"CommentList_pagination-container__11bPa\"};","import React from \"react\";\r\n\r\nconst AuthorDashboard = () => {\r\n  return <div>This is Author Dashboard</div>;\r\n};\r\n\r\nexport default AuthorDashboard;\r\n","import QueryString from 'qs';\r\nimport { BooksResponde } from 'app/models/BooksResponde';\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://localhost:5001/api\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    await sleep(1000);\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    // const { data, status } = error.response!;\r\n    // switch (status) {\r\n    //   case 400:\r\n    //     if (data.errors) {\r\n    //       const modalStateErrors = [];\r\n    //       for (const key in data.errors) {\r\n    //         if (data.errors[key]) {\r\n    //           modalStateErrors.push(data.errors[key]);\r\n    //         }\r\n    //       }\r\n    //       throw modalStateErrors.flat();\r\n    //     }\r\n    //     break;\r\n    //   case 404:\r\n    //     history.push(\"/not-found\");\r\n    //     break;\r\n    // }\r\n    console.log(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => {\r\n  return response.data\r\n};\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  getWithParams: (url: string, params: any) =>\r\n    axios.get(url, params).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Books = {\r\n  getBestSellers: () => {\r\n    return requests.get<BooksResponde>(\"productservice/list\");\r\n  },\r\n  searchProductByName: (searchString: string) => {\r\n    const query = QueryString.stringify({ searchString });\r\n    return requests.get<BooksResponde>(`productservice/searchProductByName?${query}`)\r\n  }\r\n};\r\n\r\nconst agent = {\r\n  requests,\r\n  Books,\r\n};\r\n\r\nexport default agent;\r\n","import React, { Dispatch, useReducer } from \"react\"\r\n\r\nimport { CommentModel } from './commentAgent'\r\n\r\nenum CommentActionType {\r\n  SetIsLoading = 'SetIsLoading',\r\n  SetPage = 'SetPage',\r\n  SetCommentResponse = 'SetCommentResponse',\r\n  SetErrorHappended = 'SetErrorHappended',\r\n  SetProps = 'SetProps',\r\n}\r\n\r\nconst initialState: CommentControlState = {\r\n  comments: [],\r\n  pageSize: 5,\r\n  page: 1,\r\n  totalPage: 1,\r\n  isLoading: false,\r\n  errorHappended: false,\r\n}\r\n\r\nconst initialProps: CommentProps = {\r\n  username: '',\r\n  productId: -1,\r\n}\r\n\r\nconst initialContext: CommentControlContext = {\r\n  state: initialState,\r\n  dispatch: () => { }\r\n}\r\n\r\nconst actionCreator = {\r\n  setIsLoading: (isLoading: boolean): CommentControlAction => {\r\n    return {\r\n      type: CommentActionType.SetIsLoading,\r\n      payload: {\r\n        isLoading: isLoading\r\n      }\r\n    } as CommentControlAction\r\n  },\r\n  setPage: (page: number): CommentControlAction => {\r\n    return {\r\n      type: CommentActionType.SetPage,\r\n      payload: {\r\n        page: page\r\n      }\r\n    } as CommentControlAction\r\n  },\r\n  setCommentResponse: (comments: CommentModel[], totalPage: number): CommentControlAction => {\r\n    return {\r\n      type: CommentActionType.SetCommentResponse,\r\n      payload: {\r\n        comments: comments,\r\n        totalPage: totalPage\r\n      }\r\n    } as CommentControlAction\r\n  },\r\n  setErrorHappended: (isError: boolean): CommentControlAction => {\r\n    return {\r\n      type: CommentActionType.SetErrorHappended,\r\n      payload: {\r\n        errorHappended: isError\r\n      }\r\n    } as CommentControlAction\r\n  },\r\n}\r\n\r\nconst reducer = (state: CommentControlState, action: CommentControlAction): CommentControlState => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case CommentActionType.SetIsLoading:\r\n      return {\r\n        ...state,\r\n        isLoading: payload.isLoading\r\n      }\r\n    case CommentActionType.SetPage:\r\n      return {\r\n        ...state,\r\n        page: payload.page\r\n      }\r\n    case CommentActionType.SetCommentResponse:\r\n      return {\r\n        ...state,\r\n        comments: payload.comments,\r\n        totalPage: payload.totalPage,\r\n        isLoading: false\r\n      }\r\n    case CommentActionType.SetErrorHappended:\r\n      return {\r\n        ...state,\r\n        errorHappended: payload.errorHappended,\r\n        isLoading: false\r\n      }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nconst CommentContext = React.createContext(initialContext);\r\nconst PropsContext = React.createContext(initialProps);\r\n\r\nconst useCommentReducer = (): CommentControlContext => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  return { state, dispatch }\r\n}\r\n\r\nexport default useCommentReducer\r\n\r\nexport { actionCreator, CommentContext, PropsContext }\r\n\r\nexport type { CommentControlState }\r\n//====================================\r\n\r\ntype CommentControlState = {\r\n  comments: CommentModel[],\r\n  pageSize: number,\r\n  page: number,\r\n  totalPage: number,\r\n  isLoading: boolean,\r\n  errorHappended: boolean\r\n}\r\n\r\ntype CommentProps = {\r\n  username: string,\r\n  productId: number\r\n}\r\n\r\ntype CommentControlContext = {\r\n  state: CommentControlState,\r\n  dispatch: Dispatch<CommentControlAction>\r\n}\r\n\r\ntype CommentControlAction = {\r\n  type: CommentActionType,\r\n  payload: CommentControlState\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Grid, Image, Label } from \"semantic-ui-react\";\r\nimport imageAgent from \"../../../app/api/imageAgent\";\r\nimport { Book } from \"../../../app/models/book\";\r\n\r\ninterface Props {\r\n  item: Book;\r\n}\r\n\r\nconst BookItem = ({ item }: Props) => {\r\n  // const [imageSource, setImageSource] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   getImage(item.name);\r\n  // });\r\n\r\n  // const getImage = async (term: string) => {\r\n  //   let images = await imageAgent.queryTerm(term);\r\n  //   setImageSource(images.data.results[0].urls.raw);\r\n  // };\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Card className=\"zoom\">\r\n        <Image src={item.image} ui={false} className=\"book-cover-image\" />\r\n        <Card.Content>\r\n          <Card.Header>{item.name}</Card.Header>\r\n          <Card.Meta>{item.author}</Card.Meta>\r\n          <Card.Description>{item.shortDescription}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Label color=\"red\" key=\"red\">\r\n            -20%\r\n          </Label>\r\n          <Label as=\"a\" style={{ float: \"right\" }}>\r\n            ${item.price}\r\n          </Label>\r\n        </Card.Content>\r\n      </Card>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default BookItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\r\nimport agent from \"../../../app/api/agent\";\r\nimport { Book } from \"../../../app/models/book\";\r\nimport BookItem from \"./BookItem\";\r\n\r\nconst BestSellers = () => {\r\n  const [bestSellers, setBestSellers] = useState<Book[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (bestSellers.length === 0) {\r\n      getBestSellers();\r\n    }\r\n  }, []);\r\n\r\n  const getBestSellers = async () => {\r\n    agent.Books.getBestSellers().then((result) => {\r\n      const { books } = result;\r\n      setBestSellers(books);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header as=\"h2\" dividing>\r\n        <Icon name=\"thumbs up outline\" />\r\n        <Header.Content>Best Sellers</Header.Content>\r\n      </Header>\r\n      <Grid columns={4}>\r\n        <Grid.Row>\r\n          {bestSellers.map((book) => (\r\n            <BookItem item={book} key={book.id} />\r\n          ))}\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestSellers;\r\n","import React from \"react\";\r\nimport { Header, Icon, Item } from \"semantic-ui-react\";\r\n\r\nconst NewBooks = () => {\r\n  return (\r\n    <div>\r\n      <Header as=\"h2\">\r\n        <Icon name=\"star outline\" />\r\n        <Header.Content>New Books</Header.Content>\r\n      </Header>\r\n      <Item.Group>\r\n        <Item>\r\n          <Item.Image size=\"tiny\" src={\"/assets/bookImages/book1.jpg\"} />\r\n          <Item.Content>\r\n            <Item.Header as=\"a\">The Gravity Of Us</Item.Header>\r\n            <Item.Meta>Author X</Item.Meta>\r\n            <Item.Extra>$12.00</Item.Extra>\r\n          </Item.Content>\r\n        </Item>\r\n        <Item>\r\n          <Item.Image size=\"tiny\" src={\"/assets/bookImages/book1.jpg\"} />\r\n          <Item.Content>\r\n            <Item.Header as=\"a\">New Book 2</Item.Header>\r\n            <Item.Meta>Author X</Item.Meta>\r\n            <Item.Extra>$12.00</Item.Extra>\r\n          </Item.Content>\r\n        </Item>\r\n      </Item.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBooks;\r\n","import React from \"react\";\r\nimport { Container, Grid, Header, Item, Icon } from \"semantic-ui-react\";\r\nimport BestSellers from \"./BestSellers\";\r\nimport NewBooks from \"./NewBooks\";\r\n\r\nconst BookDashboard = () => {\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column width={11}>\r\n            <BestSellers />\r\n          </Grid.Column>\r\n          <Grid.Column width={1} />\r\n          <Grid.Column width={4}>\r\n            <NewBooks />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BookDashboard;\r\n","import React from \"react\";\r\n\r\nconst ContactInfo = () => {\r\n  return <div>Contact Info Page</div>;\r\n};\r\n\r\nexport default ContactInfo;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nconst LoginForm = () => {\r\n  return (\r\n    <Grid\r\n      textAlign=\"center\"\r\n      style={{ height: \"90vh\", marginTop: \"-5em\" }}\r\n      verticalAlign=\"middle\"\r\n    >\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" color=\"black\" textAlign=\"center\">\r\n          Log-in to your account\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Form.Input\r\n              fluid\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"E-mail address\"\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <Button color=\"teal\" fluid size=\"large\">\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          New to us? <a href=\"#\">Sign Up</a>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import agent from \"app/api/agent\"\r\nimport QueryString from \"qs\"\r\n\r\nconst { requests } = agent\r\n\r\nconst urls = {\r\n  testComments: \"comments/test-data\",\r\n  commentsOfProduct: \"comments/product\",\r\n  comments: \"comments\"\r\n}\r\n\r\ntype SeedComment = {\r\n  productIds: number[]\r\n}\r\n\r\ntype PagingModel = {\r\n  items: CommentModel[]\r\n  totalPage: number\r\n  totalRecord: number\r\n}\r\n\r\ntype CommentModel = {\r\n  id: number,\r\n  modifiedDate: Date,\r\n  modifiedBy: string,\r\n  content: string,\r\n  userName: string\r\n}\r\n\r\nconst commentAgent = {\r\n  // test data\r\n  seedComments: () => requests.post<SeedComment>(urls.testComments, {}),\r\n  deleteSeedComments: () => requests.delete<SeedComment>(urls.testComments),\r\n  getProductOfSeedComments: () => requests.get<SeedComment>(`${urls.testComments}/product`),\r\n\r\n  // comment of product\r\n  getCommentOfProduct: (productId: number, page: number = 1, size: number = 5) => {\r\n    const url = `${urls.commentsOfProduct}/${productId}?${QueryString.stringify({ page, size })}`\r\n    return requests.get<PagingModel>(url)\r\n  },\r\n  createCommenfOfProduct: (productId: number, content: string, userName: string): Promise<CommentModel> => {\r\n    const url = `${urls.commentsOfProduct}/${productId}`\r\n    return requests.post<CommentModel>(url, { content, userName })\r\n  },\r\n  deleteCommentOfProduct: (productId: number) => {\r\n    const url = `${urls.commentsOfProduct}/${productId}`\r\n    return requests.delete<number>(url)\r\n  },\r\n\r\n  // comment\r\n  updateComment: (commentId: number, content: string) => {\r\n    const url = `${urls.comments}/${commentId}`\r\n    return requests.put(url, { content })\r\n  },\r\n  deleteComment: (commentId: number) => {\r\n    const url = `${urls.comments}/${commentId}`\r\n    return requests.delete(url)\r\n  }\r\n}\r\n\r\nexport type { SeedComment, CommentModel, PagingModel }\r\n\r\nexport default commentAgent","import { ErrorMessage, Formik } from 'formik'\r\nimport { Form, SubmitButton, TextArea } from 'formik-semantic-ui-react'\r\nimport { useContext } from 'react'\r\nimport { Icon } from 'semantic-ui-react'\r\nimport * as Yup from 'yup'\r\n\r\nimport styles from \"./CommentAddForm.module.css\"\r\nimport commentAgent from './commentAgent'\r\nimport { CommentContext, actionCreator, PropsContext } from './commentReducer'\r\n\r\nconst CommentAddForm = () => {\r\n  const commentControlContext = useContext(CommentContext)\r\n  const { state, dispatch } = commentControlContext\r\n  const {\r\n    isLoading,\r\n    page,\r\n    pageSize\r\n  } = state\r\n\r\n  const propsContext = useContext(PropsContext)\r\n  const { productId, username } = propsContext\r\n\r\n  const initialValues = {\r\n    comment: ''\r\n  }\r\n\r\n  const validationSchema = Yup.object({\r\n    comment: Yup.string()\r\n      .transform(function (value, originalvalue) {\r\n        return value ? value.trim() : value;\r\n      })\r\n      .min(5, 'Must be more than 5 characters',)\r\n      .max(100, 'Must be less than 1000 characters'),\r\n  })\r\n\r\n  const addComment = async (comment: string) => {\r\n    try {\r\n      dispatch(actionCreator.setIsLoading(true))\r\n      await commentAgent.createCommenfOfProduct(productId, comment, username)\r\n      const response = await commentAgent.getCommentOfProduct(productId, page, pageSize)\r\n      dispatch(actionCreator.setCommentResponse(response.items, response.totalPage))\r\n    } catch {\r\n      dispatch(actionCreator.setErrorHappended(true))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        if (values.comment) {\r\n          await addComment(values.comment);\r\n          values.comment = '';\r\n        }\r\n        setSubmitting(false)\r\n      }}\r\n    >\r\n      {formik => {\r\n        const errorBorderClass = formik.touched.comment && formik.errors.comment\r\n          ? styles['error-border'] : ''\r\n        return (\r\n          <Form>\r\n            <TextArea\r\n              name=\"comment\"\r\n              placeholder=\"Type in your comment...\"\r\n              disabled={isLoading}\r\n              className={errorBorderClass}\r\n            />\r\n            <ErrorMessage name=\"comment\" component=\"div\" className={styles.error} />\r\n            <SubmitButton primary\r\n              size='small'\r\n              className={styles['btn-add']}\r\n              loading={isLoading}\r\n            >\r\n              <Icon name='edit' />\r\n              Post\r\n            </SubmitButton>\r\n            <div className={styles['clear-float']}></div>\r\n          </Form>\r\n        )\r\n      }\r\n      }\r\n    </Formik>\r\n\r\n  )\r\n}\r\n\r\nexport default CommentAddForm","import { Placeholder } from \"semantic-ui-react\"\r\n\r\nconst CommentPlaceHolder = (props: any) => {\r\n    const { pageSize } = props\r\n\r\n    const content = Array.from({ length: pageSize })\r\n        .map((x, index) => (\r\n            <Placeholder.Header image key={index}>\r\n                <Placeholder.Line length='medium' />\r\n                <Placeholder.Line length='full' />\r\n            </Placeholder.Header>\r\n        ))\r\n\r\n    return pageSize > 0 ? <Placeholder>{content}</Placeholder> : <></>\r\n}\r\n\r\nexport default CommentPlaceHolder","export default __webpack_public_path__ + \"static/media/user.2f3777a5.png\";","import { useState } from 'react'\r\nimport { Comment, Form } from 'semantic-ui-react'\r\nimport { formatDistanceToNow } from 'date-fns'\r\n\r\nimport userAvatar from './user.png'\r\n\r\nimport styles from \"./CommentItem.module.css\"\r\n\r\nconst CommentItem = (props:any) => {\r\n    const { \r\n            comment, \r\n            onSaveClick, \r\n            onDeleteClick, \r\n            onEditClick, \r\n            onCancelClick,\r\n            isEdit,\r\n            username\r\n        } = props\r\n\r\n    let content\r\n    if (!isEdit) {\r\n        content = <ViewCommentItem\r\n                    onEditClick={() => onEditClick(comment.id)}\r\n                    onDeleteClick={() => onDeleteClick(comment.id)}\r\n                    comment={comment}\r\n                    currentUserName={username}\r\n                    />\r\n    }else{\r\n        content = <EditCommentItem\r\n                    content={comment.content}\r\n                    currentUserName={username}\r\n                    onSaveClick={(content: string) => onSaveClick(comment.id, content) }\r\n                    onCancelClick={() => onCancelClick(comment.id)}\r\n                    />\r\n    }\r\n    \r\n    return (\r\n    <Comment key={comment.id}>{content}</Comment>\r\n    )\r\n}\r\n\r\nexport default CommentItem\r\n\r\nconst ViewCommentItem = (props: any) => {\r\n    const { onEditClick, onDeleteClick, comment, currentUserName } = props\r\n    const {\r\n        userName,\r\n        modifiedDate, \r\n        content\r\n    } = comment\r\n\r\n    const canModified = userName === currentUserName\r\n    let modifiedControls = <></>\r\n\r\n    const handleEditClick = (e: any, obj: any) => onEditClick()\r\n    const handleDeleteClick = (e: any, obj: any) => onDeleteClick()\r\n\r\n    if (canModified) {\r\n        modifiedControls = (\r\n            <Comment.Actions>\r\n                <Comment.Action active onClick={handleEditClick} className={styles[\"highlight\"]}>\r\n                Edit\r\n                </Comment.Action>\r\n                <Comment.Action active onClick={handleDeleteClick} className={styles[\"highlight\"]}>\r\n                Delete\r\n                </Comment.Action>\r\n            </Comment.Actions>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Comment.Avatar src={userAvatar} />\r\n            <Comment.Content className={'comment-item'}>\r\n                <Comment.Author as='a'>{userName}</Comment.Author>\r\n                <Comment.Metadata>\r\n                    <div>{formatDistanceToNow(new Date(modifiedDate))} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text>{content}</Comment.Text>\r\n                {modifiedControls}\r\n            </Comment.Content>\r\n        </>\r\n    )\r\n}\r\n\r\nconst EditCommentItem = (props: any) => {\r\n    const { content, onSaveClick, onCancelClick, currentUserName } = props\r\n    const [internalContent, setInternalContent] = useState(content)\r\n\r\n    const handleContentChange = (e: any, obj: any) => setInternalContent(obj.value)\r\n\r\n    return (\r\n        <>\r\n            <Comment.Avatar src={userAvatar} />\r\n            <Comment.Content className={'comment-item'}>\r\n                <Comment.Author as='a'>{currentUserName}</Comment.Author>\r\n                <Form>\r\n                    <Form.TextArea\r\n                    size='mini'\r\n                    value={internalContent}\r\n                    onChange={handleContentChange}/>\r\n                </Form>\r\n                <Comment.Actions>\r\n                    <Comment.Action active \r\n                        className={styles[\"highlight\"]}\r\n                        onClick={handleClick(onSaveClick, internalContent)}>\r\n                    Save\r\n                    </Comment.Action>\r\n                    <Comment.Action active\r\n                        className={styles[\"highlight\"]} \r\n                        onClick={handleClick(onCancelClick)}>\r\n                    Cancel\r\n                    </Comment.Action>\r\n                </Comment.Actions>\r\n            </Comment.Content>\r\n        </>\r\n    )\r\n}\r\n\r\nconst EnterKey = 13, SpaceKey = 32\r\n\r\nconst handleClick = (f:Function, obj: any = null) => () => f(obj)\r\nconst handleKeyPress = (f:Function, obj: any = null) => (e: any) => {\r\n    if (e.charCode === SpaceKey || e.charCode === EnterKey) {\r\n        // Prevent the default action to stop scrolling when space is pressed\r\n        e.preventDefault()\r\n        f(obj)\r\n    }\r\n}","import { useCallback, useContext, useEffect, useState } from \"react\"\r\nimport { Message, Pagination } from \"semantic-ui-react\"\r\n\r\nimport styles from \"./CommentList.module.css\"\r\nimport commentAgent from './commentAgent'\r\nimport { actionCreator, CommentContext, PropsContext } from \"./commentReducer\"\r\nimport CommentPlaceHolder from \"./CommentPlaceHolder\"\r\nimport CommentItem from \"./CommentItem\"\r\n\r\nconst CommentList = () => {\r\n  const commentControlContext = useContext(CommentContext)\r\n  const { state, dispatch } = commentControlContext\r\n  const {\r\n    comments,\r\n    pageSize,\r\n    page,\r\n    totalPage,\r\n    isLoading,\r\n  } = state\r\n\r\n  const propsContext = useContext(PropsContext)\r\n  const { productId, username } = propsContext\r\n\r\n  const [editCommentId, setEditCommentId] = useState(-1)\r\n\r\n  const handleEditClick = (commentId: number) => {\r\n    setEditCommentId(commentId)\r\n  }\r\n\r\n  const handleCancelClick = () => {\r\n    setEditCommentId(-1)\r\n  }\r\n\r\n  const handleDeleteClick = async (commentId: number) => {\r\n    try {\r\n      dispatch(actionCreator.setIsLoading(true))\r\n      await commentAgent.deleteComment(commentId)\r\n      await getCommentsOfProduct()\r\n    } catch {\r\n      dispatch(actionCreator.setErrorHappended(true))\r\n    }\r\n  }\r\n\r\n  const handleSaveClick = async (commentId: number, content: string) => {\r\n    try {\r\n      dispatch(actionCreator.setIsLoading(true))\r\n      await commentAgent.updateComment(commentId, content)\r\n      setEditCommentId(-1)\r\n      await getCommentsOfProduct()\r\n    } catch {\r\n      dispatch(actionCreator.setErrorHappended(true))\r\n    }\r\n  }\r\n\r\n  const getCommentsOfProduct = useCallback(\r\n    async (setIsLoading: boolean = false) => {\r\n      try {\r\n        if (setIsLoading) {\r\n          dispatch(actionCreator.setIsLoading(true))\r\n        }\r\n        const response = await commentAgent.getCommentOfProduct(productId, page, pageSize)\r\n        dispatch(actionCreator.setCommentResponse(response.items, response.totalPage))\r\n      } catch {\r\n        dispatch(actionCreator.setErrorHappended(true))\r\n      }\r\n    },\r\n    [dispatch, productId, page, pageSize],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (productId > 0) getCommentsOfProduct(true)\r\n  }, [productId, page, pageSize, getCommentsOfProduct])\r\n\r\n  const handlePageChange = (page: number) => {\r\n    dispatch(actionCreator.setPage(page))\r\n  }\r\n\r\n  let content\r\n  if (isLoading) {\r\n    content = <CommentPlaceHolder pageSize={pageSize} />\r\n  }\r\n  else if (!comments || comments.length <= 0) {\r\n    content = <CommentEmpty />\r\n  }\r\n  else {\r\n    const commentItems = comments.map(comment =>\r\n      <CommentItem\r\n        key={comment.id}\r\n        comment={comment}\r\n        onSaveClick={handleSaveClick}\r\n        onDeleteClick={handleDeleteClick}\r\n        onEditClick={handleEditClick}\r\n        onCancelClick={handleCancelClick}\r\n        isEdit={editCommentId === comment.id}\r\n        username={username}\r\n      />\r\n    )\r\n\r\n    content = (<>\r\n      {commentItems}\r\n      <CommentPagination\r\n        page={page}\r\n        totalPage={totalPage}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </>)\r\n  }\r\n\r\n  return content\r\n}\r\n\r\nexport default CommentList\r\n\r\n//--------------------------------\r\nconst CommentEmpty = () => {\r\n  return (\r\n    <Message info>\r\n      <Message.Header>There is no comment yet</Message.Header>\r\n      <p>Create one now!</p>\r\n    </Message>\r\n  )\r\n}\r\n\r\nconst CommentPagination = (props: any) => {\r\n  const { page, totalPage, onPageChange } = props\r\n\r\n  const handlePageChange = (e: any, { activePage }: any) => onPageChange(activePage)\r\n\r\n  return (\r\n    <div className={styles[\"pagination-container\"]}>\r\n      <Pagination\r\n        activePage={page}\r\n        totalPages={totalPage}\r\n        size='mini'\r\n        onPageChange={handlePageChange} />\r\n    </div>\r\n  )\r\n}","import { Comment, Header, Message } from 'semantic-ui-react'\r\nimport CommentAddForm from './CommentAddForm'\r\n\r\nimport CommentList from './CommentList'\r\nimport useCommentReducer, { CommentContext, PropsContext } from './commentReducer'\r\n\r\nconst CommentControl = ({ productId, username }: CommentControlProps) => {\r\n  const commentControlContext = useCommentReducer()\r\n  const { state } = commentControlContext\r\n\r\n  const { errorHappended } = state\r\n\r\n  let content\r\n  if (productId <= 0 || errorHappended) {\r\n    content = (\r\n      <Message negative>\r\n        <Message.Header>Something went wrong</Message.Header>\r\n        <p>Please reload to try again.</p>\r\n      </Message>\r\n    )\r\n  } else {\r\n    content = (\r\n      <PropsContext.Provider value={{ productId, username }}>\r\n        <CommentContext.Provider value={commentControlContext}>\r\n          <CommentAddForm />\r\n          <CommentList />\r\n        </CommentContext.Provider>\r\n      </PropsContext.Provider>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Comment.Group size='large'>\r\n      <Header as='h3' dividing>\r\n        Comments\r\n      </Header>\r\n      {content}\r\n    </Comment.Group>\r\n  )\r\n}\r\n\r\nexport default CommentControl\r\n\r\nexport type CommentControlProps = {\r\n  productId: number,\r\n  username: string\r\n}\r\n\r\n// callback hook\r\n//The 'getCommentsOfProduct' function makes the dependencies of useEffect Hook (at line 69) change on every ren\r\n//fix this, wrap the definition of 'getCommentsOfProduct' in its own useCallback() Hook \r\n\r\n// host vercel run test","import { useState, useEffect, SyntheticEvent } from 'react'\r\nimport { Button, Dropdown } from 'semantic-ui-react'\r\n\r\nimport agent from \"./commentAgent\"\r\n\r\nconst ControlBoard = (props: any) => {\r\n    const { productId, onChangeProductId } = props\r\n    const [productIds, setProductIds] = useState<DropdownSource[]>([])\r\n\r\n    useEffect(() => {\r\n        const getProductIdOfSeedComments = async() => {\r\n            try {\r\n                const response = await agent.getProductOfSeedComments()\r\n                setProductIds(mapToDropdownSource(response.productIds))    \r\n            } catch (error) {\r\n                console.log(error)   \r\n            }\r\n        }\r\n\r\n        getProductIdOfSeedComments()\r\n      }, [])\r\n  \r\n    const seedComments = async() => {\r\n        const response = await agent.seedComments()\r\n        setProductIds(mapToDropdownSource(response.productIds))\r\n    }\r\n\r\n    const clearSeedComments = async() => {\r\n        const response = await agent.deleteSeedComments()\r\n        setProductIds(mapToDropdownSource(response.productIds))\r\n        onChangeProductId(0)\r\n    }\r\n\r\n    const handleChangeProductId = (event: SyntheticEvent, data: any) => onChangeProductId(data.value)\r\n\r\n    return(\r\n        <>\r\n            <span>\r\n              Show comment of {' '}\r\n              <Dropdown\r\n                inline\r\n                options={productIds}\r\n                placeholder='product'\r\n                value={productId}\r\n                onChange={handleChangeProductId}\r\n              />\r\n            </span> \r\n            <Button\r\n                content='Seed Comment'\r\n                onClick={handleClick(seedComments)}\r\n                onKeyPress={handleKeyPress(seedComments)}\r\n            />\r\n            <Button\r\n                content='Delete Comment Of Product'\r\n                onClick={handleClick(clearSeedComments)}\r\n                onKeyPress={handleKeyPress(clearSeedComments)}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ControlBoard\r\n\r\nconst EnterKey = 13, SpaceKey = 32\r\n\r\nconst handleClick = (f:Function) => async() => await f()\r\nconst handleKeyPress = (f:Function) => async (e: any) => {\r\n    if (e.charCode === SpaceKey || e.charCode === EnterKey) {\r\n        // Prevent the default action to stop scrolling when space is pressed\r\n        e.preventDefault()\r\n        await f()\r\n    }\r\n}\r\n\r\nconst mapToDropdownSource = (nums: number[]) => \r\n    nums.map(x => ({\r\n      key: x,\r\n      text: `Product ${x}`,\r\n      value: x\r\n    } as DropdownSource)\r\n  )\r\n\r\ntype DropdownSource = {\r\n    key: any,\r\n    text: string,\r\n    value: any\r\n}    ","import { useState } from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\n\r\nimport CommentControl from \"./CommentControl\"\r\nimport ControlBoard from './ControlBoard'\r\n\r\nconst CommentPage = () => {\r\n  const [productId, setProductId] = useState(0)\r\n  const [username] = useState('user@t.t')\r\n\r\n  return (\r\n    <Container>\r\n      <ControlBoard productId={productId} onChangeProductId={setProductId} />\r\n      <CommentControl productId={productId} username={username} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CommentPage","import agent from 'app/api/agent';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Search } from 'semantic-ui-react';\r\n\r\ntype SuggestItem = {\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    image: string,\r\n    price: string\r\n}\r\n\r\nfunction InputSearch() {\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [bookList, setBookList] = useState<SuggestItem[]>([]);\r\n\r\n    const typingTimeout = useRef<any>(null);\r\n\r\n    const handleResultSelect = (e: any, data: any) => {\r\n        console.log(data.result.id);\r\n        console.log(data.result.title);\r\n    }\r\n\r\n    const handleSearchChange = (e: any) => {\r\n        const input = e.target.value;\r\n        setValue(input);\r\n        setLoading(true);\r\n\r\n        if (typingTimeout.current) {\r\n            clearTimeout(typingTimeout.current)\r\n        }\r\n\r\n        typingTimeout.current = setTimeout(() => {\r\n\r\n            async function searchBook() {\r\n                const { books } = await agent.Books.searchProductByName(input);\r\n                const suggestList = books.map((item) => {\r\n                    const suggestItem: SuggestItem = {\r\n                        id: item.id,\r\n                        title: item.name,\r\n                        description: item.shortDescription,\r\n                        image: item.image,\r\n                        price: `$${item.price}`\r\n                    }\r\n                    return suggestItem;\r\n                })\r\n                setLoading(false);\r\n                setBookList(suggestList);\r\n            }\r\n\r\n            if (input != \"\") {\r\n                searchBook();\r\n            }\r\n            else {\r\n                setBookList([]);\r\n                setLoading(false);\r\n            }\r\n        }, 300);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(typingTimeout.current);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <Search\r\n            loading={loading}\r\n            onResultSelect={handleResultSelect}\r\n            onSearchChange={handleSearchChange}\r\n            results={bookList}\r\n            value={value}\r\n        />\r\n    );\r\n}\r\n\r\nexport default InputSearch;","import InputSearch from \"components/InputSearch/InputSearch\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dropdown, Menu } from \"semantic-ui-react\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Menu pointing secondary size=\"large\">\r\n      <Menu.Item header name=\"home\" as={NavLink} to=\"/dashboard\" />\r\n      <Dropdown item text=\"Genres\">\r\n        <Dropdown.Menu>\r\n          <Dropdown.Header>Westerns</Dropdown.Header>\r\n          <Dropdown.Header>Romance</Dropdown.Header>\r\n          <Dropdown.Header>Sci-Fi</Dropdown.Header>\r\n          <Dropdown.Header>Contemporary</Dropdown.Header>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <Menu.Item name=\"authors\" as={NavLink} to=\"/authors\" />\r\n      <Menu.Item name=\"contact\" as={NavLink} to=\"/contact\" />\r\n      <Menu.Item name=\"comment\" as={NavLink} to=\"/\" />\r\n      <Menu.Item>\r\n        {/* <Input\r\n          className=\"icon\"\r\n          icon={<Icon loading link />}\r\n          placeholder=\"Search...\"\r\n        /> */}\r\n        <InputSearch />\r\n      </Menu.Item>\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item name=\"Login\" as={NavLink} to=\"/login\" />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport AuthorDashboard from \"../../features/authors/AuthorDashboard\";\r\nimport BookDashboard from \"../../features/books/dashboard/BookDashboard\";\r\nimport ContactInfo from \"../../features/contact/ContactInfo\";\r\nimport LoginForm from \"../../features/users/LoginForm\";\r\nimport CommentPage from \"features/comments/CommentPage\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container fluid style={{ marginTop: \"5em\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/dashboard\" component={BookDashboard} />\r\n          <Route exact path=\"/authors\" component={AuthorDashboard} />\r\n          <Route exact path=\"/contact\" component={ContactInfo} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n          <Route exact path=\"/\" component={CommentPage} />\r\n        </Switch>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./app/layout/styles.css\";\r\nimport App from \"./app/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter, Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}