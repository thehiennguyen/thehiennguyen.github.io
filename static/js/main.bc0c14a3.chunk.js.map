{"version":3,"sources":["layouts/Header.tsx","layouts/Menu.tsx","layouts/ScrollTop.tsx","layouts/Layout.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","anchorId","marginLeft","onOpenMenu","classes","makeStyles","theme","createStyles","appBar","width","menuButton","marginRight","spacing","useStyles","AppBar","position","className","Toolbar","id","IconButton","edge","color","onClick","Typography","variant","list","Menu","open","onClose","closeMenu","event","type","key","Drawer","anchor","role","onKeyDown","Divider","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","root","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","ownerDocument","document","querySelector","scrollIntoView","behavior","block","display","content","flexGrow","backgroundColor","palette","background","default","padding","toolbar","mixins","Layout","useState","setOpen","useTheme","matches","useMediaQuery","breakpoints","up","CssBaseline","toString","Fab","size","withWidth","Box","my","Array","join","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","getElementById","hasChildNodes","hydrate","StrictMode","render"],"mappings":"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","file":"static/js/main.bc0c14a3.chunk.js","sourcesContent":["import AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\ninterface HeaderProps {\r\n    anchorId?: string,\r\n    marginLeft?: number,\r\n    onOpenMenu?: () => void\r\n}\r\n\r\nconst useStyles = (marginLeft: number) => makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            width: `calc(100% - ${marginLeft}px)`,\r\n            marginLeft: marginLeft,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n    }),\r\n)\r\n\r\nconst Header = (props: HeaderProps) => {\r\n    const { anchorId, marginLeft, onOpenMenu } = props\r\n    const classes = useStyles(marginLeft ?? 0)()\r\n    const openMenu = () => onOpenMenu && onOpenMenu()\r\n    return <>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar id={(anchorId ?? \"back-to-top-anchor\")}>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={openMenu}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">with an open drawer</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </>\r\n}\r\nexport default Header","import Drawer from '@material-ui/core/Drawer'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        list: {\r\n            width: 250,\r\n        },\r\n    }),\r\n)\r\n\r\ninterface MenuProps {\r\n    open: boolean,\r\n    onClose: () => void\r\n}\r\nconst Menu = ({ open, onClose }: MenuProps) => {\r\n    const classes = useStyles()\r\n    const closeMenu = (\r\n        event: React.KeyboardEvent | React.MouseEvent,\r\n    ) => {\r\n        if (\r\n            event.type === 'keydown' &&\r\n            ((event as React.KeyboardEvent).key === 'Tab' ||\r\n                (event as React.KeyboardEvent).key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        onClose();\r\n    }\r\n\r\n    return <Drawer\r\n        anchor=\"left\"\r\n        onClose={closeMenu}\r\n        open={open}\r\n    >\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={closeMenu}\r\n            onKeyDown={closeMenu}\r\n        >\r\n            <h1>HarleyNTek</h1>\r\n            <Divider />\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    </Drawer>\r\n}\r\nexport default Menu","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\r\nimport Zoom from '@material-ui/core/Zoom'\r\n\r\ninterface Props {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window?: () => Window\r\n    children: React.ReactElement\r\n    anchorId: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'fixed',\r\n            bottom: theme.spacing(2),\r\n            right: theme.spacing(2),\r\n        },\r\n    }),\r\n)\r\n\r\nconst ScrollTop = (props: Props) => {\r\n    const { children, window, anchorId } = props\r\n    const classes = useStyles()\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    })\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\r\n            `#${anchorId}`,\r\n        )\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    )\r\n}\r\nexport default ScrollTop","import CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\r\nimport { createStyles, Theme, useTheme, makeStyles } from '@material-ui/core/styles'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nimport Header from './Header'\r\nimport Menu from './Menu'\r\nimport ScrollTop from './ScrollTop'\r\nimport { useState } from 'react'\r\n\r\n\r\n\r\ninterface LayoutProps {\r\n    children: React.ReactElement\r\n}\r\n\r\nconst menuWidth = 240\r\nconst anchorId = \"back-to-top-anchor\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.default,\r\n            padding: theme.spacing(3),\r\n        },\r\n        // necessary for content to be below app bar\r\n        toolbar: theme.mixins.toolbar,\r\n    }),\r\n)\r\n\r\nconst Layout = ({ children }: LayoutProps) => {\r\n    const [open, setOpen] = useState(false)\r\n    const classes = useStyles()\r\n    const onOpenMenu = () => setOpen(true)\r\n    const onCloseMenu = () => setOpen(false)\r\n\r\n    const theme = useTheme()\r\n    const matches = useMediaQuery(theme.breakpoints.up('sm'))\r\n    //const matches = useMediaQuery('(min-width:600px)')\r\n\r\n    return <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Header anchorId={anchorId} marginLeft={menuWidth} onOpenMenu={onOpenMenu} />\r\n        <Menu open={open} onClose={onCloseMenu} />\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            {children}\r\n            <div>hihi match lg: {matches.toString()}</div>\r\n        </main>\r\n        <br />\r\n        {/* <footer>\r\n            <span>Footer</span>\r\n        </footer> */}\r\n\r\n        <ScrollTop anchorId={anchorId}>\r\n            <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                <KeyboardArrowUpIcon />\r\n            </Fab>\r\n        </ScrollTop>\r\n    </div>\r\n}\r\n\r\nexport default Layout","import Box from '@material-ui/core/Box'\r\nimport withWidth, { WithWidth } from '@material-ui/core/withWidth'\r\n\r\nconst Home = (props: WithWidth) => {\r\n    const { width } = props\r\n\r\n    return <><Box my={2}>\r\n        Width: {width}<br />\r\n        {[...new Array(12)]\r\n            .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n            )\r\n            .join('\\n')}\r\n    </Box>\r\n    </>\r\n}\r\nexport default withWidth()(Home)","import Layout from './layouts/Layout'\nimport Home from './pages/Home'\n\nimport './App.css'\n\nfunction App() {\n  return <Layout>\n    <Home />\n  </Layout>\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { hydrate, render } from \"react-dom\"\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement) {\n  if (rootElement.hasChildNodes()) {\n    hydrate(<React.StrictMode>\n      <App />\n    </React.StrictMode>, rootElement);\n  } else {\n    render(<React.StrictMode>\n      <App />\n    </React.StrictMode>, rootElement);\n  }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}